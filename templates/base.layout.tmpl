{{define "base"}}
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <!-- Required meta tags -->
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

        <title>Fort Smythe Bed and Breakfast</title>

        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
              integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1"
              crossorigin="anonymous">

        <link rel="stylesheet"
              href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.0/dist/css/datepicker-bs4.min.css">
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
        <link rel="stylesheet" type="text/css" href="/static/css/styles.css">
        <title>Document</title>

        {{block "css" .}}

        {{end}}
        <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
          <div class="container-fluid">
            <a class="navbar-brand" href="#">Bookaroo</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
              <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
              <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                  <a class="nav-link active" aria-current="page" href="/">Home</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="/about-us">About</a>
                </li>
                <li class="nav-item dropdown">
                  <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Rooms
                  </a>
                  <ul class="dropdown-menu">
                    <li><a class="dropdown-item" href="/rooms/basic-suite">Basic Suite</a></li>
                    <li><a class="dropdown-item" href="/rooms/kings-suite">Kings Suite</a></li>
                  </ul>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="/make-reservation">Book Now</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="/contact-us">Contact Us</a>
                </li>
              </ul>
              <form class="d-flex" role="search">
                <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
              </form>
            </div>
          </div>
        </nav>
        
        {{block "content" .}}

        {{end}}

        <div class="container">
          <footer class="py-3 my-4">
            <ul class="nav justify-content-center border-bottom pb-3 mb-3">
              <li class="nav-item"><a href="/" class="nav-link px-2 text-muted">Home</a></li>
              <li class="nav-item"><a href="/about-us" class="nav-link px-2 text-muted">About Us</a></li>
              <li class="nav-item"><a href="/make-reservation" class="nav-link px-2 text-muted">Book Now</a></li>
              <li class="nav-item"><a href="/contact-us" class="nav-link px-2 text-muted">Contact Us</a></li>
            </ul>
            <p class="text-center text-muted">Â© 2023 Bookio, Inc</p>
          </footer>
        </div>

      
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
            crossorigin="anonymous"></script>

        <script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.0/dist/js/datepicker-full.min.js"></script>
        <script src="https://unpkg.com/notie"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

        {{block "js" .}}

        {{end}}
        <script>
          let attention = Prompt();
          
          (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                let forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
          })();

          function notify(title, text, icon, confirmButtonText) {
              Swal.fire({
                  title: title,
                  text: text,
                  icon: icon,
                  confirmButtonText: confirmButtonText
              })
          }
        
        function Prompt() {
            let toast = function(c) {
                const {
                    msg = "",
                    icon = "success",
                    position = "top-end",
                } = c;

                const Toast = Swal.mixin({
                    toast: true,
                    title: msg,
                    position: position,
                    icon: icon,
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })
                Toast.fire({ })
            }

            let success = function(c) {
                const {
                    msg = "",
                    title = "",
                    footer = ""
                } = c;

                Swal.fire({
                    icon: 'success',
                    title: title,
                    text: msg,
                    footer: footer
                })
            }

            let error = function(c) {
                const {
                    msg = "",
                    title = "",
                    footer = ""
                } = c;

                Swal.fire({
                    icon: 'error',
                    title: title,
                    text: msg,
                    footer: footer
                })
            }

            async function custom(c) {
                const {
                    msg = "",
                    title = "",
                } = c

                const { value: result } = await Swal.fire({
                    title: title,
                    html: msg,
                    backdrop: true,
                    focusConfirm: false,
                    showCancelButton: true,
                    willOpen: () => {
                        if (c.willOpen !== undefined) {
                          c.willOpen()
                        }
                    },
                    preConfirm: () => {
                      return [
                        document.getElementById('start_date').value,
                        document.getElementById('end_date').value
                      ]
                    },
                    didOpen: () => {
                        if (c.didOpen !== undefined) {
                          c.didOpen()
                        }
                    }
                })

                if (result) {
                  if (result.dismiss !== Swal.DismissReason.cancel) {
                    if (result.value !== "") {
                      if (c.callback !== undefined) {
                        c.callback(result)
                      }
                    } else {
                      c.callback(false)
                    }
                  } else {
                    c.callback(false)
                  }
                }
            }

            return {
                toast: toast,
                success: success,
                error: error,
                custom: custom
            }
        }

    </script>
  </body>
  </html>
{{end}}